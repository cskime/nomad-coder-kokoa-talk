/* recommended-friends */

.recommended-friends {
  margin: 25px 0px;
  padding: 25px 0px;
  border-top: var(--main-border);
  border-bottom: var(--main-border);
}
.recommended-friends__title {
  font-size: 14px;
  color: var(--gray);
}
.recommended-friends span {
  margin: 100px 0px;
  text-align: center;
  display: block;
  color: var(--gray);
  font-size: 18px;
}

/* open-chat */

.open-chat__header {
  display: flex;
  justify-content: space-between;
  color: var(--gray);
  margin-bottom: 25px;
}
.open-chat__header span {
  opacity: 0.6;
}

.open-post {
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.open-post__title {
  font-weight: 600;
  margin-bottom: 7px;
}
.open-post__hashtags {
  /* Uppercase는 디자인 요소이므로 HTML에서 대문자를 쓰지 않고 CSS에서 uppercase로 바꿔준다. */
  text-transform: uppercase;
  opacity: 0.6;
}
.open-post__members {
  margin-top: 7px;
  display: flex;
  align-items: center;
}
.open-post__members img {
  width: 15px;
  height: 15px;
  border-radius: 50%;
  margin-right: 5px;
}
.open-post__member-count {
  opacity: 0.5;
  font-size: 14px;
}
.open-post__members .divider {
  width: 2px;
  height: 14px;
  background-color: var(--gray);
  margin: 0px 5px;
}
.open-post__member-status {
  color: #ffb0e0;
}
.open-post__photo {
  position: relative;
}
.open-post__photo img {
  width: 120px;
  height: 120px;
  border-radius: 10px;
}
.open-post__heart-count {
  color: white;
  background-color: rgba(0, 0, 0, 0.5);
  padding: 5px;
  border-radius: 20px;
  display: flex;
  align-items: center;
  position: absolute;
  bottom: 10px;
  right: 10px;
  font-size: 12px;
}
.open-post__heart-count span {
  margin-left: 3px;
}

/* Heart icon에 적용하기 */

@keyframes heartBeat {
  0% {
    color: white;
    transform: none;
  }
  50% {
    color: tomato;
    transform: scale(1.5);
  }
  100% {
    color: white;
    transform: none;
  }
}

/* open-post__heart-count가 hover state일 떄 그 안에 있는 icon에 적용함 */
.open-post__heart-count:hover i {
  /* - scale에 너무 작은 값을 사용하면 문제가 생길 수 있음
     - 여기서는 animation이 떨리는 것 처럼 보임
     - will-change property를 사용하면 브라우저에 어떤 것이 바뀔지 알려줄 수 있다.

     [ will-change ]
     - Provides a rendering hint to the user agent(browser),
     - starting what kinds of changes the author expects to perform onthe element.

     여기서는 `transform` property가 animation으로 변경될 예정이므로 
     `transform`에 적용한다.
  */
  will-change: transform;
  animation: heartBeat 1s linear infinite;
}
