#friends-display-link {
  display: block; /* block으로 바꿔서 width가 꽉 차게 만듦 */
  text-align: center;
  background-color: #fafafa;
  padding: 15px 0px;
  margin-bottom: 10px;
  font-size: 18px;
  margin-top: -15px;
}

#friends-display-link i {
  color: rgba(0, 0, 0, 0.3);
  margin-right: 5px;
}

.friends-screen {
  padding: 0px var(--horizontal-space);
}

.friends-screen__channel {
  margin-top: 25px;
  border-top: var(--main-border);
  padding-top: 15px;
}

.friends-screen__channel-header {
  margin-bottom: 30px;
  display: flex;
  justify-content: space-between;
  color: rgba(0, 0, 0, 0.5);
}

/* splash-screen */

@keyframes hideSplashScreen {
  from {
    opacity: 1;
  }
  to {
    opacity: 0; /* click x */
    display: none; /* click x */
    visibility: hidden; /* click o */

    /* CSS로는 element를 완전히 없앨 수 없다.
       - opacity: 0인 상태로 유지되긴 하겠지만 element 자체가 없어지진 않음
       - 맨 위에 splash screen이 덮고 있으므로 다른 element를 클릭할 수 없음
       - visibility를 hidden으로 설정하면 click 가능하지만 element는 여전히 남아있음

      어떤 element를 숨기고 싶다면 Javascript를 사용해야 한다. 
  */
  }
}

#splash-screen {
  background-color: var(--yellow);
  /* absolute : 다른 layer로 만들어서 화면을 모두 덮고 고정된 위치를 갖게 함 */
  position: absolute;
  height: 100vh; /* vh : screen height의 100% */
  width: 100vw; /* vw : screen width의 100% */
  top: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 132px;

  /* [ Animation other option ]
     - `forwards` : animation이 끝난 뒤 마지막 속성을 유지시키는 값
       - remember the last keyframe
     - animation-delay : animation 시작 시간을 지연시키는 property
  */
  animation: hideSplashScreen 0.25s ease-in-out forwards;
  animation-delay: 2s;
}
