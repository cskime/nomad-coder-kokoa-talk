#chat-screen {
  background-color: #abc1d1;
  height: 500vh;
}

#chat-screen .alt-header,
#chat-screen .status-bar {
  position: fixed;
  width: 100%;
  box-sizing: border-box;
  top: 0;
  background-color: #abc1d1;
}
#chat-screen .alt-header {
  top: 10px;
}

/* z-index
     - layer의 순서가 몇번째인가
     - z-index가 클 수록 화면 앞으로 나와서 z-index가 작은 요소를 가린다.
   */
#chat-screen .status-bar {
  z-index: 2;
}

@keyframes fadeIn {
  from {
    transform: translateY(30px);
    opacity: 0;
  }
  to {
    transform: none;
    opacity: 1;
  }
}

.main-chat {
  margin-top: 150px;
  display: flex;
  flex-direction: column;
  align-items: center;
  animation: fadeIn 0.8s linear;
}

/* chat__timestamp */
.chat__timestamp {
  color: white;
  background-color: #92a4b2;
  padding: 15px;
  font-size: 14px;
  border-radius: 25px;
  text-align: center;
  margin-bottom: 25px;
}

/* message-row */

@keyframes fadeInRowFromLeft {
  from {
    transform: translateX(-30px);
  }
  to {
    transform: none;
  }
}

.message-row {
  width: 100%;
  display: flex;
  margin-bottom: 25px;
  animation: fadeInRowFromLeft 0.8s linear;
}
.message-row img {
  width: 50px;
  height: 50px;
  border-radius: 20px;
  margin-right: 10px;
}

/* message */

.message__author {
  display: block;
  margin-bottom: 8px;
}
.message__info {
  display: flex;
  align-items: flex-end;
}
.message__bubble {
  background-color: white;
  padding: 13px;
  border-radius: 15px;
  border-top-left-radius: 0px; /* 모서리 개별적으로 radius 주는 방법 */
  margin-right: 5px;
  font-size: 18px;
}
.message__author,
.message__time {
  font-size: 14px;
  opacity: 0.8;
}

/* own message */

@keyframes fadeInRowFromRight {
  from {
    transform: translateX(30px);
  }
  to {
    transform: none;
  }
}

.message-row--own {
  justify-content: flex-end;
  animation: fadeInRowFromRight 0.8s linear;
}
.message-row--own .message__bubble {
  background-color: var(--yellow);
  border-top-right-radius: 0px;
  border-top-left-radius: 15px;
  margin-right: 0px;
  margin-left: 5px;
}

/* Flex order
   - Flex container는 order 0부터 순서대로 배치함
   - Flex container의 chiledren의 order를 변경해서 배치되는 순서를 조작할 수 있다.
   - **Order는 flex children에만 사용할 수 있음**

   여기서는 순서가 단순히 역전되므로 flex-direction을 row-reverse로 바꿔도 된다.
 */
/* .message-row--own .message__bubble {
  order: 1;
}
.message-row--own .message__time {
  order: 0;
} */

.message-row--own .message__info {
  flex-direction: row-reverse;
}

/* reply */

.reply {
  position: fixed;
  bottom: 0px;
  width: 100%;
  background-color: white;
  display: flex;
  justify-content: space-between;
  padding: 5px 25px;
  align-items: center;
  box-sizing: border-box;
  transition: all 0.3s ease-in-out;
}

/* input을 100% width 갖게 만들 때
   parent인 reply__column이 width를 갖고 있지 않으면 동작하지 않음
   reply__column을 1:9로 비율 고정한 뒤에야 적용된다.
*/
.reply .reply__column:first-child {
  width: 10%;
}
.reply .reply__column:last-child {
  width: 90%;
  position: relative;
}
.reply input {
  /* height: 30px; */
  padding: 12px;
  width: 100%;
  border: var(--main-border);
  border-radius: 20px;
  box-sizing: border-box;
  transition: all 0.3s ease-in-out;
}
.reply i {
  opacity: 0.5;
}
.reply__column:last-child > i,
.reply__column:last-child button {
  position: absolute;
  right: 0px;
  top: 2px;
  right: -3px;
}

.reply__column:last-child i {
  right: 40px;
  top: 15px;
}

.reply__column button {
  background-color: var(--yellow);
  border: none;
  width: 30px;
  height: 30px;
  border-radius: 50%;
}
.reply__column button i {
  opacity: 1;
}
.reply__column button:focus,
.reply__column button:active {
  outline: none;
}

/* 내부 element가 focus 상태일 때 reply 및 reply input에 transition 적용 */

.reply .reply__column:first-child,
.reply .fa-smile-wink,
.reply button {
  transition: opacity 0.3s ease-in-out;
}

.reply:focus-within .reply__column:first-child,
.reply:focus-within .fa-smile-wink,
.reply:focus-within button {
  opacity: 0;
}
.reply:focus-within input {
  width: 98vw;
  transform: translateX(-13%) translateY(-80px);
}

.reply:focus-within {
  transform: translateY(80px);
}
